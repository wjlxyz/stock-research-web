{"remainingRequest":"/Users/daliwang/workspace/stock-research-web/node_modules/babel-loader/lib/index.js!/Users/daliwang/workspace/stock-research-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/daliwang/workspace/stock-research-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/daliwang/workspace/stock-research-web/src/components/Report.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/daliwang/workspace/stock-research-web/src/components/Report.vue","mtime":1606302749328},{"path":"/Users/daliwang/workspace/stock-research-web/node_modules/cache-loader/dist/cjs.js","mtime":1606271807855},{"path":"/Users/daliwang/workspace/stock-research-web/node_modules/babel-loader/lib/index.js","mtime":1606271807794},{"path":"/Users/daliwang/workspace/stock-research-web/node_modules/cache-loader/dist/cjs.js","mtime":1606271807855},{"path":"/Users/daliwang/workspace/stock-research-web/node_modules/vue-loader/lib/index.js","mtime":1606271810211}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UiOwppbXBvcnQgX3RvQ29uc3VtYWJsZUFycmF5IGZyb20gIi9Vc2Vycy9kYWxpd2FuZy93b3Jrc3BhY2Uvc3RvY2stcmVzZWFyY2gtd2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiUmVwb3J0IiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICByZXR1cm4gewogICAgICBkYXRhOiBbewogICAgICAgIGZsb3dfbm86ICdGVzIwMjAxMTI1MTkxMjAwJywKICAgICAgICBjb250ZW50OiAnRmlyc3QgTGluZScsCiAgICAgICAgZmxvd190eXBlOiAnSGVscCcKICAgICAgfV0sCiAgICAgIHRpdGxlczogW3sKICAgICAgICBsYWJlbDogJ05PLicsCiAgICAgICAgcHJvcDogJ2Zsb3dfbm8nCiAgICAgIH0sIHsKICAgICAgICBsYWJlbDogJ0NvbnRlbnQnLAogICAgICAgIHByb3A6ICdjb250ZW50JwogICAgICB9LCB7CiAgICAgICAgbGFiZWw6ICdUeXBlJywKICAgICAgICBwcm9wOiAnZmxvd190eXBlJwogICAgICB9XSwKICAgICAgZmlsdGVyczogW3sKICAgICAgICBwcm9wOiAnZmxvd19ubycsCiAgICAgICAgdmFsdWU6ICcnCiAgICAgIH1dLAogICAgICBhY3Rpb25Db2w6IHsKICAgICAgICBwcm9wczogewogICAgICAgICAgbGFiZWw6ICdBY3Rpb25zc3NzJwogICAgICAgIH0sCiAgICAgICAgYnV0dG9uczogW3sKICAgICAgICAgIHByb3BzOiB7CiAgICAgICAgICAgIHR5cGU6ICdwcmltYXJ5JwogICAgICAgICAgfSwKICAgICAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIocm93KSB7CiAgICAgICAgICAgIF90aGlzLiRtZXNzYWdlKCdFZGl0IGNsaWNrZWQnKTsKCiAgICAgICAgICAgIHJvdy5mbG93X25vID0gJ2hlbGxvIHdvcmQnICsgTWF0aC5yYW5kb20oKTsKICAgICAgICAgICAgcm93LmNvbnRlbnQgPSBNYXRoLnJhbmRvbSgpID4gMC41ID8gJ1dhdGVyIGZsb29kJyA6ICdMb2NrIGJyb2tlbic7CiAgICAgICAgICAgIHJvdy5mbG93X3R5cGUgPSBNYXRoLnJhbmRvbSgpID4gMC41ID8gJ1JlcGFpcicgOiAnSGVscCc7CiAgICAgICAgICB9LAogICAgICAgICAgbGFiZWw6ICdFZGl0JwogICAgICAgIH0sIHsKICAgICAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIocm93KSB7CiAgICAgICAgICAgIF90aGlzLmRhdGEuc3BsaWNlKF90aGlzLmRhdGEuaW5kZXhPZihyb3cpLCAxKTsKCiAgICAgICAgICAgIF90aGlzLiRtZXNzYWdlKCdkZWxldGUgc3VjY2VzcycpOwogICAgICAgICAgfSwKICAgICAgICAgIGxhYmVsOiAnZGVsZXRlJwogICAgICAgIH1dCiAgICAgIH0sCiAgICAgIHNlbGVjdGVkUm93OiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIG9uQ3JlYXRlOiBmdW5jdGlvbiBvbkNyZWF0ZSgpIHsKICAgICAgdGhpcy5kYXRhLnB1c2goewogICAgICAgIGNvbnRlbnQ6ICJuZXcgY3JlYXRlZCIsCiAgICAgICAgZmxvd19ubzogIkZXMjAxNjAxMDEwMDAzIiArIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMCksCiAgICAgICAgZmxvd190eXBlOiAiSGVscCIsCiAgICAgICAgZmxvd190eXBlX2NvZGU6ICJoZWxwIgogICAgICB9KTsKICAgIH0sCiAgICBvbkNyZWF0ZTEwMDogZnVuY3Rpb24gb25DcmVhdGUxMDAoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzCiAgICAgIF90b0NvbnN1bWFibGVBcnJheShuZXcgQXJyYXkoMTAwKSkubWFwKGZ1bmN0aW9uIChfKSB7CiAgICAgICAgX3RoaXMyLm9uQ3JlYXRlKCk7CiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZVNlbGVjdGlvbkNoYW5nZTogZnVuY3Rpb24gaGFuZGxlU2VsZWN0aW9uQ2hhbmdlKHZhbCkgewogICAgICB0aGlzLnNlbGVjdGVkUm93ID0gdmFsOwogICAgfSwKICAgIGJ1bGtEZWxldGU6IGZ1bmN0aW9uIGJ1bGtEZWxldGUoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdGhpcy5zZWxlY3RlZFJvdy5tYXAoZnVuY3Rpb24gKHJvdykgewogICAgICAgIF90aGlzMy5kYXRhLnNwbGljZShfdGhpczMuZGF0YS5pbmRleE9mKHJvdyksIDEpOwogICAgICB9KTsKICAgICAgdGhpcy4kbWVzc2FnZSgnYnVsayBkZWxldGUgc3VjY2VzcycpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Report.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,IAFA,kBAEA;AAAA;;AACA,WAAA;AACA,MAAA,IAAA,EAAA,CACA;AAAA,QAAA,OAAA,EAAA,kBAAA;AAAA,QAAA,OAAA,EAAA,YAAA;AAAA,QAAA,SAAA,EAAA;AAAA,OADA,CADA;AAIA,MAAA,MAAA,EAAA,CACA;AAAA,QAAA,KAAA,EAAA,KAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,KAAA,EAAA,SAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,KAAA,EAAA,MAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAHA,CAJA;AASA,MAAA,OAAA,EAAA,CAAA;AACA,QAAA,IAAA,EAAA,SADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAAA,CATA;AAaA,MAAA,SAAA,EAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,KAAA,EAAA;AADA,SADA;AAIA,QAAA,OAAA,EAAA,CAAA;AACA,UAAA,KAAA,EAAA;AACA,YAAA,IAAA,EAAA;AADA,WADA;AAIA,UAAA,OAAA,EAAA,iBAAA,GAAA,EAAA;AACA,YAAA,KAAA,CAAA,QAAA,CAAA,cAAA;;AACA,YAAA,GAAA,CAAA,OAAA,GAAA,eAAA,IAAA,CAAA,MAAA,EAAA;AACA,YAAA,GAAA,CAAA,OAAA,GAAA,IAAA,CAAA,MAAA,KAAA,GAAA,GAAA,aAAA,GAAA,aAAA;AACA,YAAA,GAAA,CAAA,SAAA,GAAA,IAAA,CAAA,MAAA,KAAA,GAAA,GAAA,QAAA,GAAA,MAAA;AACA,WATA;AAUA,UAAA,KAAA,EAAA;AAVA,SAAA,EAWA;AACA,UAAA,OAAA,EAAA,iBAAA,GAAA,EAAA;AACA,YAAA,KAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,OAAA,CAAA,GAAA,CAAA,EAAA,CAAA;;AACA,YAAA,KAAA,CAAA,QAAA,CAAA,gBAAA;AACA,WAJA;AAKA,UAAA,KAAA,EAAA;AALA,SAXA;AAJA,OAbA;AAoCA,MAAA,WAAA,EAAA;AApCA,KAAA;AAsCA,GAzCA;AA0CA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,WAAA,IAAA,CAAA,IAAA,CAAA;AACA,QAAA,OAAA,EAAA,aADA;AAEA,QAAA,OAAA,EAAA,mBAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GAAA,CAFA;AAGA,QAAA,SAAA,EAAA,MAHA;AAIA,QAAA,cAAA,EAAA;AAJA,OAAA;AAMA,KARA;AASA,IAAA,WATA,yBASA;AAAA;;AACA;AACA,yBAAA,IAAA,KAAA,CAAA,GAAA,CAAA,EAAA,GAAA,CAAA,UAAA,CAAA,EAAA;AACA,QAAA,MAAA,CAAA,QAAA;AACA,OAFA;AAGA,KAdA;AAeA,IAAA,qBAfA,iCAeA,GAfA,EAeA;AACA,WAAA,WAAA,GAAA,GAAA;AACA,KAjBA;AAkBA,IAAA,UAlBA,wBAkBA;AAAA;;AACA,WAAA,WAAA,CAAA,GAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CAAA,GAAA,CAAA,EAAA,CAAA;AACA,OAFA;AAGA,WAAA,QAAA,CAAA,qBAAA;AACA;AAvBA;AA1CA,CAAA","sourcesContent":["<template>\n    <div>\n        <div style=\"margin-bottom: 10px\">\n            <el-row>\n                <el-col :span=\"18\">\n                    <el-button @click=\"onCreate\">create 1 row</el-button>\n                    <el-button @click=\"onCreate100\">create 100 row</el-button>\n                    <el-button @click=\"bulkDelete\">bulk delete</el-button>\n                </el-col>\n\n                <el-col :span=\"6\">\n                    <el-input placeholder=\"search NO.\" v-model=\"filters[0].value\"></el-input>\n                </el-col>\n            </el-row>\n        </div>\n\n        <data-tables :data=\"data\" :action-col=\"actionCol\" :filters=\"filters\" @selection-change=\"handleSelectionChange\">\n            <el-table-column type=\"selection\" width=\"55\"></el-table-column>\n\n            <el-table-column v-for=\"title in titles\" :prop=\"title.prop\" :label=\"title.label\" :key=\"title.prop\" sortable=\"custom\">\n            </el-table-column>\n        </data-tables>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: \"Report\",\n        data() {\n            return {\n                data: [\n                    {flow_no: 'FW20201125191200', content: 'First Line', flow_type: 'Help'}\n                ],\n                titles: [\n                    {label: 'NO.', prop: 'flow_no'},\n                    {label: 'Content', prop: 'content'},\n                    {label: 'Type', prop: 'flow_type'}\n                ],\n                filters: [{\n                    prop: 'flow_no',\n                    value: ''\n                }],\n                actionCol: {\n                    props: {\n                        label: 'Actionssss',\n                    },\n                    buttons: [{\n                        props: {\n                            type: 'primary'\n                        },\n                        handler: row => {\n                            this.$message('Edit clicked')\n                            row.flow_no = 'hello word' + Math.random()\n                            row.content = Math.random() > 0.5 ? 'Water flood' : 'Lock broken'\n                            row.flow_type = Math.random() > 0.5 ? 'Repair' : 'Help'\n                        },\n                        label: 'Edit'\n                    }, {\n                        handler: row => {\n                            this.data.splice(this.data.indexOf(row), 1)\n                            this.$message('delete success')\n                        },\n                        label: 'delete'\n                    }]\n                },\n                selectedRow: []\n            }\n        },\n        methods: {\n            onCreate() {\n                this.data.push({\n                    content: \"new created\",\n                    flow_no: \"FW201601010003\" + Math.floor(Math.random() * 100),\n                    flow_type: \"Help\",\n                    flow_type_code: \"help\"\n                })\n            },\n            onCreate100() {\n                // eslint-disable-next-line no-unused-vars\n                [...new Array(100)].map(_ => {\n                    this.onCreate()\n                })\n            },\n            handleSelectionChange(val) {\n                this.selectedRow = val\n            },\n            bulkDelete() {\n                this.selectedRow.map(row => {\n                    this.data.splice(this.data.indexOf(row), 1)\n                })\n                this.$message('bulk delete success')\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/components"}]}